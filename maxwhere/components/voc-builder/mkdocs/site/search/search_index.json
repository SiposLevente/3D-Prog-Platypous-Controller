{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"MaxWhere - VOC builder A MaxWhere component that enables visual programming of a MaxWhere space. The VOC-Builder is integrating Node-RED to MaxWhere that can enable the use of the so called flow based visual programming. This project aims to implement the functionalities of the MaxWhere WOM API in the form of Node-RED nodes, which makes possible to build Where-s without any coding. Node-RED Node-RED is a flow-based programming tool, originally developed by IBM\u2019s Emerging Technology Services team and now a part of the JS Foundation. Runtime/Editor Node-RED consists of a Node.js based runtime that you point a web browser at to access the flow editor. Within the browser you create your application by dragging nodes from your palette into a workspace and start to wire them together. With a single click, the application is deployed back to the runtime where it is run. The palette of nodes can be easily extended by installing new nodes created by the community and the flows you create can be easily shared as JSON files. For more information about Node-RED please visit the official Node-RED docs .","title":"Home"},{"location":"#maxwhere-voc-builder","text":"A MaxWhere component that enables visual programming of a MaxWhere space. The VOC-Builder is integrating Node-RED to MaxWhere that can enable the use of the so called flow based visual programming. This project aims to implement the functionalities of the MaxWhere WOM API in the form of Node-RED nodes, which makes possible to build Where-s without any coding.","title":"MaxWhere - VOC builder"},{"location":"#node-red","text":"Node-RED is a flow-based programming tool, originally developed by IBM\u2019s Emerging Technology Services team and now a part of the JS Foundation.","title":"Node-RED"},{"location":"#runtimeeditor","text":"Node-RED consists of a Node.js based runtime that you point a web browser at to access the flow editor. Within the browser you create your application by dragging nodes from your palette into a workspace and start to wire them together. With a single click, the application is deployed back to the runtime where it is run. The palette of nodes can be easily extended by installing new nodes created by the community and the flows you create can be easily shared as JSON files. For more information about Node-RED please visit the official Node-RED docs .","title":"Runtime/Editor"},{"location":"gettingstarted/","text":"Getting started Getting the application Download from the store You can find Voc builder in the maxwhere store under the name of VOC builder , download it and you are ready to go. Run the environment Start up the Where by clicking the play button in MaxWhere and wait until it's loaded. The node-red editor can be reached inside the MaxWhere client by loading the following url: http://localhost:8000/red in a webtable. Or open http://localhost:8000/red link in the browser, and you can see the Node-RED editor page. To get familiar with the Node-RED editor please visit the following link . Using the MaxWhere Node-RED nodes The MaxWhere nodes should be available in the palette at the left side of the editor. You can drag it to the workspace and start to work with them. By double clicking on the nodes you can configure the nodes.","title":"Getting Started"},{"location":"gettingstarted/#getting-started","text":"","title":"Getting started"},{"location":"gettingstarted/#getting-the-application","text":"","title":"Getting the application"},{"location":"gettingstarted/#download-from-the-store","text":"You can find Voc builder in the maxwhere store under the name of VOC builder , download it and you are ready to go.","title":"Download from the store"},{"location":"gettingstarted/#run-the-environment","text":"Start up the Where by clicking the play button in MaxWhere and wait until it's loaded. The node-red editor can be reached inside the MaxWhere client by loading the following url: http://localhost:8000/red in a webtable. Or open http://localhost:8000/red link in the browser, and you can see the Node-RED editor page. To get familiar with the Node-RED editor please visit the following link .","title":"Run the environment"},{"location":"gettingstarted/#using-the-maxwhere-node-red-nodes","text":"The MaxWhere nodes should be available in the palette at the left side of the editor. You can drag it to the workspace and start to work with them. By double clicking on the nodes you can configure the nodes.","title":"Using the MaxWhere Node-RED nodes"},{"location":"migrate/","text":"Migrate This page discusses how to include the VoC and the gizmo to another project. How to include the VoC-Builder into another Where? Copy the component folder from the example app on the ./components/voc-builder to your app`s ./components folder. Register the component by editing the where.json file. In the file`s components object add the following property \"voc-builder\": \"./components/voc-builder/component.json\" Create an instance of the VoC-Builder by inculding it in the index.jsx file. Example: <voc-builder userDir=\"userDir\" flowFile=\"./../../myVoc/exampleFlows.json\" resources=\"./../../myVoc/resources\"/> Where the userDir property sets the folder where the user-specific files are written, the resources property sets the resource folder where the mesh and material files are stored and the flowFile property sets the flow file which should be used. If the file does not exists, a new empty file is created. The userDir , resources and flowFile path can be either absolute or relative. How to include the Gizmo into another Where? Copy the component folder from the example app on the ./components/threejs-gizmo to your app`s ./components folder. Register the component by editing the where.json file. In the file`s components object add the following property \"threejs-gizmo\": \"./components/threejs-gizmo/component.json\" Create an instance of the VoC-Builder by inculding it in the index.jsx file. Example: <threejs-gizmo />","title":"Migrate"},{"location":"migrate/#migrate","text":"This page discusses how to include the VoC and the gizmo to another project.","title":"Migrate"},{"location":"migrate/#how-to-include-the-voc-builder-into-another-where","text":"Copy the component folder from the example app on the ./components/voc-builder to your app`s ./components folder. Register the component by editing the where.json file. In the file`s components object add the following property \"voc-builder\": \"./components/voc-builder/component.json\" Create an instance of the VoC-Builder by inculding it in the index.jsx file. Example: <voc-builder userDir=\"userDir\" flowFile=\"./../../myVoc/exampleFlows.json\" resources=\"./../../myVoc/resources\"/> Where the userDir property sets the folder where the user-specific files are written, the resources property sets the resource folder where the mesh and material files are stored and the flowFile property sets the flow file which should be used. If the file does not exists, a new empty file is created. The userDir , resources and flowFile path can be either absolute or relative.","title":"How to include the VoC-Builder into another Where?"},{"location":"migrate/#how-to-include-the-gizmo-into-another-where","text":"Copy the component folder from the example app on the ./components/threejs-gizmo to your app`s ./components folder. Register the component by editing the where.json file. In the file`s components object add the following property \"threejs-gizmo\": \"./components/threejs-gizmo/component.json\" Create an instance of the VoC-Builder by inculding it in the index.jsx file. Example: <threejs-gizmo />","title":"How to include the Gizmo into another Where?"},{"location":"adv/add-light/","text":"add light Usage Adds a light source to the Where. Configuration Create on Sets whether the light is created on initialization or input Initialization The light is added to the Where when the flow is started/deployed Input : A light is added when the node gets an input. The input msg.payload content can overwrite properties of the light to create. Here you can see the options. NodeID ID of MaxWhere node to be set. position The Node's position in 3d scene. Default is {x: 0.0, y: 0.0, z: 0.0}. orientation {x, y, z, w} - Node's orientation in 3d scene. Default is {w: 1.0, x: 0.0, y: 0.0, z: 0.0} scale {x, y, z} | Number - The Node's scale along axes. Default is {x: 1.0, y: 1.0, z: 1.0}. lighttype The light's type. Possible values are: spot, directional, point (default). diffuse The diffuse color of the light {r, g, b, a}. Default is {r: 1.0, g: 1.0, b: 1.0, a: 1.0}. specular The specular color of the light {r, g, b, a}. Default is {r: 1.0, g: 1.0, b: 1.0, a: 1.0}. range The range parameters of the light source {inner_angle: (Degree), outer_angle: (Degree), falloff: Number}. Default is {inner_angle: 35, outer_angle: 70, falloff: 1}. attenuation The attenuation coefficients of the light source {range, constant, linear, quadratic}, where properties are positive Numbers (constant is in range [0, 1]). Default is {range: 5000, constant: 1, linear: 0.0009, quadratic: 0.000003}, . direction The 3D vector towards the light will point {x, y, z}. Default is {x: 0, y: -1, z: 0}. Display name Name of the node in the editor. Input If Create on is set to input it adds a light and msg.payload overwrites provided options . Output After light is created a message is added to msg.payload .","title":"add light"},{"location":"adv/add-light/#add-light","text":"","title":"add light"},{"location":"adv/add-light/#usage","text":"Adds a light source to the Where.","title":"Usage"},{"location":"adv/add-light/#configuration","text":"Create on Sets whether the light is created on initialization or input Initialization The light is added to the Where when the flow is started/deployed Input : A light is added when the node gets an input. The input msg.payload content can overwrite properties of the light to create. Here you can see the options. NodeID ID of MaxWhere node to be set. position The Node's position in 3d scene. Default is {x: 0.0, y: 0.0, z: 0.0}. orientation {x, y, z, w} - Node's orientation in 3d scene. Default is {w: 1.0, x: 0.0, y: 0.0, z: 0.0} scale {x, y, z} | Number - The Node's scale along axes. Default is {x: 1.0, y: 1.0, z: 1.0}. lighttype The light's type. Possible values are: spot, directional, point (default). diffuse The diffuse color of the light {r, g, b, a}. Default is {r: 1.0, g: 1.0, b: 1.0, a: 1.0}. specular The specular color of the light {r, g, b, a}. Default is {r: 1.0, g: 1.0, b: 1.0, a: 1.0}. range The range parameters of the light source {inner_angle: (Degree), outer_angle: (Degree), falloff: Number}. Default is {inner_angle: 35, outer_angle: 70, falloff: 1}. attenuation The attenuation coefficients of the light source {range, constant, linear, quadratic}, where properties are positive Numbers (constant is in range [0, 1]). Default is {range: 5000, constant: 1, linear: 0.0009, quadratic: 0.000003}, . direction The 3D vector towards the light will point {x, y, z}. Default is {x: 0, y: -1, z: 0}. Display name Name of the node in the editor.","title":"Configuration"},{"location":"adv/add-light/#input","text":"If Create on is set to input it adds a light and msg.payload overwrites provided options .","title":"Input"},{"location":"adv/add-light/#output","text":"After light is created a message is added to msg.payload .","title":"Output"},{"location":"adv/add-mesh-hierarchy/","text":"add mesh hierarchy Usage Adds a collection of meshes to the Where, with the specified hierarchy. Hierarchy tree On the top of the editor the hierarchy tree can be built. Add child Click on a element to select it and then click on the Add button to add a child mesh to it. Remove a mesh Click on a element to select it and then click on the Remove button to remove it from the tree. Rename the element Click on a element to select it and then click on the Rename button to rename the element on the tree. Configuration Edit confguration of a mesh. Click on the selected mesh and edit the configuration of the given mesh. Mesh Configuration Node id ID of MaxWhere node to be set. Mesh file Name of the mesh file to use Position The Node's position in 3d scene. Default is {x: 0.0, y: 0.0, z: 0.0}. Orientation {x, y, z, w} - Node's orientation in 3d scene. Default is {w: 1.0, x: 0.0, y: 0.0, z: 0.0} Scale {x, y, z} | Number - The Node's scale along axes. Default is {x: 1.0, y: 1.0, z: 1.0}. Physical autophysical Whether to generate a simple physical shape for the Node. raycast Whether the physical is pointable by mouse. Node Configuration Create on Sets whether the mesh is created on initialization or input Initialization The mesh is added to the Where when the flow is started/deployed Input : A mesh is added when the node gets an input. The input msg.payload content can overwrite properties of the mesh to create. Here you can see the options. Save If turned on the runtime changes made to the position , orientation and scale are saved when the Ctrl + S key combination is used. Currently only supported if Create on is set to Initialization . Display name Name of the node in the editor. Input If Create on is set to input it adds a mesh hierartchy and msg.payload overwrites provided options . Output After mesh hierarchy is created a message is added to msg.payload .","title":"add mesh hierarchy"},{"location":"adv/add-mesh-hierarchy/#add-mesh-hierarchy","text":"","title":"add mesh hierarchy"},{"location":"adv/add-mesh-hierarchy/#usage","text":"Adds a collection of meshes to the Where, with the specified hierarchy.","title":"Usage"},{"location":"adv/add-mesh-hierarchy/#hierarchy-tree","text":"On the top of the editor the hierarchy tree can be built. Add child Click on a element to select it and then click on the Add button to add a child mesh to it. Remove a mesh Click on a element to select it and then click on the Remove button to remove it from the tree. Rename the element Click on a element to select it and then click on the Rename button to rename the element on the tree.","title":"Hierarchy tree"},{"location":"adv/add-mesh-hierarchy/#configuration","text":"","title":"Configuration"},{"location":"adv/add-mesh-hierarchy/#edit-confguration-of-a-mesh","text":"Click on the selected mesh and edit the configuration of the given mesh.","title":"Edit confguration of a mesh."},{"location":"adv/add-mesh-hierarchy/#mesh-configuration","text":"Node id ID of MaxWhere node to be set. Mesh file Name of the mesh file to use Position The Node's position in 3d scene. Default is {x: 0.0, y: 0.0, z: 0.0}. Orientation {x, y, z, w} - Node's orientation in 3d scene. Default is {w: 1.0, x: 0.0, y: 0.0, z: 0.0} Scale {x, y, z} | Number - The Node's scale along axes. Default is {x: 1.0, y: 1.0, z: 1.0}. Physical autophysical Whether to generate a simple physical shape for the Node. raycast Whether the physical is pointable by mouse.","title":"Mesh Configuration"},{"location":"adv/add-mesh-hierarchy/#node-configuration","text":"Create on Sets whether the mesh is created on initialization or input Initialization The mesh is added to the Where when the flow is started/deployed Input : A mesh is added when the node gets an input. The input msg.payload content can overwrite properties of the mesh to create. Here you can see the options. Save If turned on the runtime changes made to the position , orientation and scale are saved when the Ctrl + S key combination is used. Currently only supported if Create on is set to Initialization . Display name Name of the node in the editor.","title":"Node Configuration"},{"location":"adv/add-mesh-hierarchy/#input","text":"If Create on is set to input it adds a mesh hierartchy and msg.payload overwrites provided options .","title":"Input"},{"location":"adv/add-mesh-hierarchy/#output","text":"After mesh hierarchy is created a message is added to msg.payload .","title":"Output"},{"location":"adv/add-mesh/","text":"add mesh Usage Adds a mesh to the Where. Configuration Create on Sets whether the mesh is created on initialization or input Initialization The mesh is added to the Where when the flow is started/deployed Input : A mesh is added when the node gets an input. The input msg.payload content can overwrite properties of the mesh to create. Here you can see the options . Node id ID of MaxWhere node to be set. Mesh file Name of the mesh file to use Position The Node's position in 3d scene. Default is {x: 0.0, y: 0.0, z: 0.0}. Orientation {x, y, z, w} - Node's orientation in 3d scene. Default is {w: 1.0, x: 0.0, y: 0.0, z: 0.0} Scale {x, y, z} | Number - The Node's scale along axes. Default is {x: 1.0, y: 1.0, z: 1.0}. Physical autophysical Whether to generate a simple physical shape for the Node. raycast Whether the physical is pointable by mouse. Save If turned on the runtime changes made to the position , orientation and scale are saved when the Ctrl + S key combination is used. Currently only supported if Create on is set to Initialization . Display name Name of the node in the editor. Input If Create on is set to input it adds a mesh and msg.payload overwrites provided options . Output After mesh is created a message is added to msg.payload .","title":"add mesh"},{"location":"adv/add-mesh/#add-mesh","text":"","title":"add mesh"},{"location":"adv/add-mesh/#usage","text":"Adds a mesh to the Where.","title":"Usage"},{"location":"adv/add-mesh/#configuration","text":"Create on Sets whether the mesh is created on initialization or input Initialization The mesh is added to the Where when the flow is started/deployed Input : A mesh is added when the node gets an input. The input msg.payload content can overwrite properties of the mesh to create. Here you can see the options . Node id ID of MaxWhere node to be set. Mesh file Name of the mesh file to use Position The Node's position in 3d scene. Default is {x: 0.0, y: 0.0, z: 0.0}. Orientation {x, y, z, w} - Node's orientation in 3d scene. Default is {w: 1.0, x: 0.0, y: 0.0, z: 0.0} Scale {x, y, z} | Number - The Node's scale along axes. Default is {x: 1.0, y: 1.0, z: 1.0}. Physical autophysical Whether to generate a simple physical shape for the Node. raycast Whether the physical is pointable by mouse. Save If turned on the runtime changes made to the position , orientation and scale are saved when the Ctrl + S key combination is used. Currently only supported if Create on is set to Initialization . Display name Name of the node in the editor.","title":"Configuration"},{"location":"adv/add-mesh/#input","text":"If Create on is set to input it adds a mesh and msg.payload overwrites provided options .","title":"Input"},{"location":"adv/add-mesh/#output","text":"After mesh is created a message is added to msg.payload .","title":"Output"},{"location":"adv/add-overlay/","text":"add overlay Usage Adds an overlay to the Where. Configuration Create on Sets whether the overlay is created on initialization or input Initialization The overlay is added to the Where when the flow is started/deployed Input : A overlay is added when the node gets an input. The input msg.payload content can overwrite properties of the overlay to create. Here Here you can see the options. NodeID ID of MaxWhere node to be set. url Current URL to load after webtable is successfully initialized. Behvaior Always on overlay is always visible 3D only overlay is only visible on 3D mode Menu only overlay is only visible on 2D menu position The Node's position in 3d scene. Default is {x: 0.0, y: 0.0, z: 0.0}. orientation {x, y, z, w} - Node's orientation in 3d scene. Default is {w: 1.0, x: 0.0, y: 0.0, z: 0.0} scale {x, y, z} | Number - The Node's scale along axes. Default is {x: 1.0, y: 1.0, z: 1.0}. Physical autophysical Whether to generate a simple physical shape for the Node. raycast Whether the physical is pointable by mouse. Canvas location The location of Canvas. Can be rendered into the 3d scene (in-game) or on the overlay of native window (overlay) in front of every scene object. Possible values are: in-game (default), overlay. width The width of Canvas in Ogre units (in-game) or pixels (overlay). Default is 1280. height - The height of Canvas in Ogre units (in-game) or pixels (overlay). Default is 720. resolution-width The resolution width of the Canvas's texture in pixels (Integer). Default is 1280. resolution-height The resolution height of the Canvas's texture in pixels (Integer). Default is 720. transparent Whether the Canvas is transparent. Alpha channel of texture's pixel color is used for transparency values. Default is true. zOrder Z order of overlay type Canvas (Integer). Overlay with greater Z order covers overlays with less Z order. Default is 1. metrics Determines the metrics used for left and top for overlay type Canvas. Possible values are pixels (default), relative left For overlay type, the offset from the left of the window. Default is 0. top For overlay type, the offset from the top of the window. Default is 0. horizontal-align - Determines how to align the overlay type Canvas horizontally. left's 0 point depends on this alignment. Possible values are left (default), center, right. vertical-align Determines how to align the overlay type Canvas vertically. top's 0 point depends on this alignment. Possible values are top (default), center, bottom disableIngamePhysical Determines whether Canvas registers canvas type physical shape matching Canvas's dimensions when created. If true physical shape is not registered (always true for overlay). Default is false. Webview inputDisabled Boolean (optional) - Disable mouse and key inputs for BrowserWindow of this Webview . Default is true . directKeyEvent Boolean (optional) - Determines whether the BrowserWindow of Webview is listening for any key event ( false ) or only for those emitted while the mouse hovers the Webview ( true ). Hover is detected either by physical shape ( in-game ) or mouse position intersection ( overlay ) Default is true . nodeIntegration Boolean (optional) - Enable node integration in BrowserWindow of Webview . Default is false . webSecurity Boolean (optional) - Enable web security in BrowserWindow of Webview . Default is true . scaleFactor Number (optional, positive) - Pixel scale factor of BrowserWindow . Default is the scale factor of native window (or 1 if that's not available). Display name Name of the node in the editor. Input If Create on is set to input it adds a overlay and msg.payload overwrites provided options . Output After overlay is created a message is added to msg.payload .","title":"add overlay"},{"location":"adv/add-overlay/#add-overlay","text":"","title":"add overlay"},{"location":"adv/add-overlay/#usage","text":"Adds an overlay to the Where.","title":"Usage"},{"location":"adv/add-overlay/#configuration","text":"Create on Sets whether the overlay is created on initialization or input Initialization The overlay is added to the Where when the flow is started/deployed Input : A overlay is added when the node gets an input. The input msg.payload content can overwrite properties of the overlay to create. Here Here you can see the options. NodeID ID of MaxWhere node to be set. url Current URL to load after webtable is successfully initialized. Behvaior Always on overlay is always visible 3D only overlay is only visible on 3D mode Menu only overlay is only visible on 2D menu position The Node's position in 3d scene. Default is {x: 0.0, y: 0.0, z: 0.0}. orientation {x, y, z, w} - Node's orientation in 3d scene. Default is {w: 1.0, x: 0.0, y: 0.0, z: 0.0} scale {x, y, z} | Number - The Node's scale along axes. Default is {x: 1.0, y: 1.0, z: 1.0}. Physical autophysical Whether to generate a simple physical shape for the Node. raycast Whether the physical is pointable by mouse. Canvas location The location of Canvas. Can be rendered into the 3d scene (in-game) or on the overlay of native window (overlay) in front of every scene object. Possible values are: in-game (default), overlay. width The width of Canvas in Ogre units (in-game) or pixels (overlay). Default is 1280. height - The height of Canvas in Ogre units (in-game) or pixels (overlay). Default is 720. resolution-width The resolution width of the Canvas's texture in pixels (Integer). Default is 1280. resolution-height The resolution height of the Canvas's texture in pixels (Integer). Default is 720. transparent Whether the Canvas is transparent. Alpha channel of texture's pixel color is used for transparency values. Default is true. zOrder Z order of overlay type Canvas (Integer). Overlay with greater Z order covers overlays with less Z order. Default is 1. metrics Determines the metrics used for left and top for overlay type Canvas. Possible values are pixels (default), relative left For overlay type, the offset from the left of the window. Default is 0. top For overlay type, the offset from the top of the window. Default is 0. horizontal-align - Determines how to align the overlay type Canvas horizontally. left's 0 point depends on this alignment. Possible values are left (default), center, right. vertical-align Determines how to align the overlay type Canvas vertically. top's 0 point depends on this alignment. Possible values are top (default), center, bottom disableIngamePhysical Determines whether Canvas registers canvas type physical shape matching Canvas's dimensions when created. If true physical shape is not registered (always true for overlay). Default is false. Webview inputDisabled Boolean (optional) - Disable mouse and key inputs for BrowserWindow of this Webview . Default is true . directKeyEvent Boolean (optional) - Determines whether the BrowserWindow of Webview is listening for any key event ( false ) or only for those emitted while the mouse hovers the Webview ( true ). Hover is detected either by physical shape ( in-game ) or mouse position intersection ( overlay ) Default is true . nodeIntegration Boolean (optional) - Enable node integration in BrowserWindow of Webview . Default is false . webSecurity Boolean (optional) - Enable web security in BrowserWindow of Webview . Default is true . scaleFactor Number (optional, positive) - Pixel scale factor of BrowserWindow . Default is the scale factor of native window (or 1 if that's not available). Display name Name of the node in the editor.","title":"Configuration"},{"location":"adv/add-overlay/#input","text":"If Create on is set to input it adds a overlay and msg.payload overwrites provided options .","title":"Input"},{"location":"adv/add-overlay/#output","text":"After overlay is created a message is added to msg.payload .","title":"Output"},{"location":"adv/add-webtable/","text":"add webtable Usage Adds a webtable to the Where. Configuration Create on Sets whether the webtable is created on initialization or input Initialization The webtable is added to the Where when the flow is started/deployed Input : A webtable is added when the node gets an input. The input msg.payload content can overwrite properties of the webtable to create. Here you can see the options. Node id ID of MaxWhere node to be set. url Current URL to load after webtable is successfully initialized. Behvaior Always on overlay is always visible 3D only overlay is only visible on 3D mode Menu only overlay is only visible on 2D menu position The Node's position in 3d scene. Default is {x: 0.0, y: 0.0, z: 0.0}. orientation {x, y, z, w} - Node's orientation in 3d scene. Default is {w: 1.0, x: 0.0, y: 0.0, z: 0.0} scale {x, y, z} | Number - The Node's scale along axes. Default is {x: 1.0, y: 1.0, z: 1.0}. Physical autophysical Whether to generate a simple physical shape for the Node. raycast Whether the physical is pointable by mouse. Canvas location The location of Canvas. Can be rendered into the 3d scene (in-game) or on the overlay of native window (overlay) in front of every scene object. Possible values are: in-game (default), overlay. width The width of Canvas in Ogre units (in-game) or pixels (overlay). Default is 1280. height - The height of Canvas in Ogre units (in-game) or pixels (overlay). Default is 720. resolution-width The resolution width of the Canvas's texture in pixels (Integer). Default is 1280. resolution-height The resolution height of the Canvas's texture in pixels (Integer). Default is 720. transparent Whether the Canvas is transparent. Alpha channel of texture's pixel color is used for transparency values. Default is true. zOrder Z order of overlay type Canvas (Integer). Overlay with greater Z order covers overlays with less Z order. Default is 1. metrics Determines the metrics used for left and top for overlay type Canvas. Possible values are pixels (default), relative left For overlay type, the offset from the left of the window. Default is 0. top For overlay type, the offset from the top of the window. Default is 0. horizontal-align - Determines how to align the overlay type Canvas horizontally. left's 0 point depends on this alignment. Possible values are left (default), center, right. vertical-align Determines how to align the overlay type Canvas vertically. top's 0 point depends on this alignment. Possible values are top (default), center, bottom disableIngamePhysical Determines whether Canvas registers canvas type physical shape matching Canvas's dimensions when created. If true physical shape is not registered (always true for overlay). Default is false. Webview inputDisabled Boolean (optional) - Disable mouse and key inputs for BrowserWindow of this Webview . Default is true . directKeyEvent Boolean (optional) - Determines whether the BrowserWindow of Webview is listening for any key event ( false ) or only for those emitted while the mouse hovers the Webview ( true ). Hover is detected either by physical shape ( in-game ) or mouse position intersection ( overlay ) Default is true . nodeIntegration Boolean (optional) - Enable node integration in BrowserWindow of Webview . Default is false . webSecurity Boolean (optional) - Enable web security in BrowserWindow of Webview . Default is true . scaleFactor Number (optional, positive) - Pixel scale factor of BrowserWindow . Default is the scale factor of native window (or 1 if that's not available). Webtable index Index number of webtable, which is used as a reference to this webtable instance (and displayed on default maxwhere page). private Whether this webtable should be excluded from bundle export. auto-resolution Whether the resolution of the webview should be automatically calculated from the resolution and pixel scale factor of the containing display. If defined, 'resolution-width' and resolution-height` options will not be applied. The auto-generated resolution will precisely match the covered screen resolution in zoomed-in state urlControls Whether to create URL control UI overlay bar to this webtable. Without URL control bar the content of the webview cannot be changed. Default is true savedURL - Pinned URL, which can be loaded with 'Return to Pin' and overwritten with 'Pin'. Considered as the user's personal saved URL factoryURL Factory default URL, which can be loaded with 'Return to default'. Considered as the Home URL defined by the designer of the Where Save If turned on the runtime changes made to the position , orientation and scale are saved when the Ctrl + S key combination is used. Currently only supported if Create on is set to Initialization . Display name Name of the node in the editor. Input If Create on is set to input it adds a webtable and msg.payload overwrites provided options . Output After webtable is created a message is added to msg.payload .","title":"add webtable"},{"location":"adv/add-webtable/#add-webtable","text":"","title":"add webtable"},{"location":"adv/add-webtable/#usage","text":"Adds a webtable to the Where.","title":"Usage"},{"location":"adv/add-webtable/#configuration","text":"Create on Sets whether the webtable is created on initialization or input Initialization The webtable is added to the Where when the flow is started/deployed Input : A webtable is added when the node gets an input. The input msg.payload content can overwrite properties of the webtable to create. Here you can see the options. Node id ID of MaxWhere node to be set. url Current URL to load after webtable is successfully initialized. Behvaior Always on overlay is always visible 3D only overlay is only visible on 3D mode Menu only overlay is only visible on 2D menu position The Node's position in 3d scene. Default is {x: 0.0, y: 0.0, z: 0.0}. orientation {x, y, z, w} - Node's orientation in 3d scene. Default is {w: 1.0, x: 0.0, y: 0.0, z: 0.0} scale {x, y, z} | Number - The Node's scale along axes. Default is {x: 1.0, y: 1.0, z: 1.0}. Physical autophysical Whether to generate a simple physical shape for the Node. raycast Whether the physical is pointable by mouse. Canvas location The location of Canvas. Can be rendered into the 3d scene (in-game) or on the overlay of native window (overlay) in front of every scene object. Possible values are: in-game (default), overlay. width The width of Canvas in Ogre units (in-game) or pixels (overlay). Default is 1280. height - The height of Canvas in Ogre units (in-game) or pixels (overlay). Default is 720. resolution-width The resolution width of the Canvas's texture in pixels (Integer). Default is 1280. resolution-height The resolution height of the Canvas's texture in pixels (Integer). Default is 720. transparent Whether the Canvas is transparent. Alpha channel of texture's pixel color is used for transparency values. Default is true. zOrder Z order of overlay type Canvas (Integer). Overlay with greater Z order covers overlays with less Z order. Default is 1. metrics Determines the metrics used for left and top for overlay type Canvas. Possible values are pixels (default), relative left For overlay type, the offset from the left of the window. Default is 0. top For overlay type, the offset from the top of the window. Default is 0. horizontal-align - Determines how to align the overlay type Canvas horizontally. left's 0 point depends on this alignment. Possible values are left (default), center, right. vertical-align Determines how to align the overlay type Canvas vertically. top's 0 point depends on this alignment. Possible values are top (default), center, bottom disableIngamePhysical Determines whether Canvas registers canvas type physical shape matching Canvas's dimensions when created. If true physical shape is not registered (always true for overlay). Default is false. Webview inputDisabled Boolean (optional) - Disable mouse and key inputs for BrowserWindow of this Webview . Default is true . directKeyEvent Boolean (optional) - Determines whether the BrowserWindow of Webview is listening for any key event ( false ) or only for those emitted while the mouse hovers the Webview ( true ). Hover is detected either by physical shape ( in-game ) or mouse position intersection ( overlay ) Default is true . nodeIntegration Boolean (optional) - Enable node integration in BrowserWindow of Webview . Default is false . webSecurity Boolean (optional) - Enable web security in BrowserWindow of Webview . Default is true . scaleFactor Number (optional, positive) - Pixel scale factor of BrowserWindow . Default is the scale factor of native window (or 1 if that's not available). Webtable index Index number of webtable, which is used as a reference to this webtable instance (and displayed on default maxwhere page). private Whether this webtable should be excluded from bundle export. auto-resolution Whether the resolution of the webview should be automatically calculated from the resolution and pixel scale factor of the containing display. If defined, 'resolution-width' and resolution-height` options will not be applied. The auto-generated resolution will precisely match the covered screen resolution in zoomed-in state urlControls Whether to create URL control UI overlay bar to this webtable. Without URL control bar the content of the webview cannot be changed. Default is true savedURL - Pinned URL, which can be loaded with 'Return to Pin' and overwritten with 'Pin'. Considered as the user's personal saved URL factoryURL Factory default URL, which can be loaded with 'Return to default'. Considered as the Home URL defined by the designer of the Where Save If turned on the runtime changes made to the position , orientation and scale are saved when the Ctrl + S key combination is used. Currently only supported if Create on is set to Initialization . Display name Name of the node in the editor.","title":"Configuration"},{"location":"adv/add-webtable/#input","text":"If Create on is set to input it adds a webtable and msg.payload overwrites provided options .","title":"Input"},{"location":"adv/add-webtable/#output","text":"After webtable is created a message is added to msg.payload .","title":"Output"},{"location":"adv/animate/","text":"animate Usage Animates the Node by changing the specified attribute of its transformation. Animation will change the attribute according to the specified option parameters step by step. Configuration Node ID selects the node on which the trasformation applied Attribute Transformation type. Possible values are position , scale , orientation . To Values of the animated attribute for every step. The length of array should be equal to number of animation steps. Duration Duration of animation steps in seconds. Repeat Repeat the animation for ever. Default is false. Loop Loop the animation for ever. Animation will be played, then played backwards and repeated (overrides repeat if given contradictory). Default is false. Cubic The cubic easing function of the animation which defines the curve of temporal run. Reference Reference of the attribute adjustment. Possible values are: absolute (default), relative. Space Space the attribute adjustment is applied in. Possible values are: local, parent (default), world Display name Name of the node in the editor. Input Input triggers the node, but msg content is not used. Output After animation is completed object is sent containing the selected node in the msg.payload property","title":"animate"},{"location":"adv/animate/#animate","text":"","title":"animate"},{"location":"adv/animate/#usage","text":"Animates the Node by changing the specified attribute of its transformation. Animation will change the attribute according to the specified option parameters step by step.","title":"Usage"},{"location":"adv/animate/#configuration","text":"Node ID selects the node on which the trasformation applied Attribute Transformation type. Possible values are position , scale , orientation . To Values of the animated attribute for every step. The length of array should be equal to number of animation steps. Duration Duration of animation steps in seconds. Repeat Repeat the animation for ever. Default is false. Loop Loop the animation for ever. Animation will be played, then played backwards and repeated (overrides repeat if given contradictory). Default is false. Cubic The cubic easing function of the animation which defines the curve of temporal run. Reference Reference of the attribute adjustment. Possible values are: absolute (default), relative. Space Space the attribute adjustment is applied in. Possible values are: local, parent (default), world Display name Name of the node in the editor.","title":"Configuration"},{"location":"adv/animate/#input","text":"Input triggers the node, but msg content is not used.","title":"Input"},{"location":"adv/animate/#output","text":"After animation is completed object is sent containing the selected node in the msg.payload property","title":"Output"},{"location":"adv/exploded-view/","text":"exploded view Usage Toggles exploded view on a node which has children nodes (mesh hierarchy). Configuration NodeID ID of MaxWhere node displacementFactor extent of displacement of the children nodes from the parent node Name Name of the node in the editor. Input Input triggers the node but msg content is not used, so it has not affect. Output Chosen MaxWhere node is added to msg.payload .","title":"exploded view"},{"location":"adv/exploded-view/#exploded-view","text":"","title":"exploded view"},{"location":"adv/exploded-view/#usage","text":"Toggles exploded view on a node which has children nodes (mesh hierarchy).","title":"Usage"},{"location":"adv/exploded-view/#configuration","text":"NodeID ID of MaxWhere node displacementFactor extent of displacement of the children nodes from the parent node Name Name of the node in the editor.","title":"Configuration"},{"location":"adv/exploded-view/#input","text":"Input triggers the node but msg content is not used, so it has not affect.","title":"Input"},{"location":"adv/exploded-view/#output","text":"Chosen MaxWhere node is added to msg.payload .","title":"Output"},{"location":"adv/gauge/","text":"mw gauge Usage Creates a gauge which can be used to display numeric values. Gauge contains three meshes - Body Body of the gauge. - Dial Children of the body. Dial texture is generated on it. - Needle Chldren of the dial. Rotation of needle indicates the value. Minimum angle Minimum angle of needle that can be set. Maximum angle Maxiumum angle of needle that can be set. Configuration Configuration can be set in two different ways, depending of the Configuration method value. Configuration from file File Name Name of the configuration file. Name Name of the node in the editor. Local configuration NodeID ID of MaxWhere node to be set. Mapping Minimum angle Minimum angle of needle that can be set. Maximum angle Maximum angle of needle that can be set. Minimum value Minimum value that can be displayed on gauge. Maximum value Maximum value that can be displayed on gauge. Body mesh url Name of Ogre mesh file. physical mesh url Name of .obj file that contains the physical shape of the object. shape Name of shape type. Position x x coordinate of position to set y y coordinate of position to set z z coordinate of position to set Orientation w w member of orientation quaternion to set x x member of orientation quaternion to set y y member of orientation quaternion to set z z member of orientation quaternion to set Scale Scale to set. Dial mesh url Name of Ogre mesh file. physical mesh url Name of .obj file that contains the physical shape of the object. shape Name of shape type. Position x x coordinate of position to set y y coordinate of position to set z z coordinate of position to set Orientation w w member of orientation quaternion to set x x member of orientation quaternion to set y y member of orientation quaternion to set z z member of orientation quaternion to set Scale Scale to set. Needle mesh url Name of Ogre mesh file. physical mesh url Name of .obj file that contains the physical shape of the object. shape Name of shape type. Position x x coordinate of position to set y y coordinate of position to set z z coordinate of position to set Orientation w w member of orientation quaternion to set x x member of orientation quaternion to set y y member of orientation quaternion to set z z member of orientation quaternion to set Scale Scale to set. Rotation axis x x member of rotation axis y y member of rotation axis z z member of rotation axis Texture Width(pixel) Width of the dial texture. Height(pixel) Height of the dial texture. Units Units to be displayed on dial texture. Major ticks Value where major tick should be displayed. Multiple can be set with , separator. Plate color Color of plate that can be set with hexcolor code. Highlights(from, to,color) Highlights to be displayed. Name Name of the node in the editor. Input Input value is dispayed by needle. Output No output.","title":"gauge"},{"location":"adv/gauge/#mw-gauge","text":"","title":"mw gauge"},{"location":"adv/gauge/#usage","text":"Creates a gauge which can be used to display numeric values. Gauge contains three meshes - Body Body of the gauge. - Dial Children of the body. Dial texture is generated on it. - Needle Chldren of the dial. Rotation of needle indicates the value. Minimum angle Minimum angle of needle that can be set. Maximum angle Maxiumum angle of needle that can be set.","title":"Usage"},{"location":"adv/gauge/#configuration","text":"Configuration can be set in two different ways, depending of the Configuration method value.","title":"Configuration"},{"location":"adv/gauge/#configuration-from-file","text":"File Name Name of the configuration file. Name Name of the node in the editor.","title":"Configuration from file"},{"location":"adv/gauge/#local-configuration","text":"NodeID ID of MaxWhere node to be set. Mapping Minimum angle Minimum angle of needle that can be set. Maximum angle Maximum angle of needle that can be set. Minimum value Minimum value that can be displayed on gauge. Maximum value Maximum value that can be displayed on gauge. Body mesh url Name of Ogre mesh file. physical mesh url Name of .obj file that contains the physical shape of the object. shape Name of shape type. Position x x coordinate of position to set y y coordinate of position to set z z coordinate of position to set Orientation w w member of orientation quaternion to set x x member of orientation quaternion to set y y member of orientation quaternion to set z z member of orientation quaternion to set Scale Scale to set. Dial mesh url Name of Ogre mesh file. physical mesh url Name of .obj file that contains the physical shape of the object. shape Name of shape type. Position x x coordinate of position to set y y coordinate of position to set z z coordinate of position to set Orientation w w member of orientation quaternion to set x x member of orientation quaternion to set y y member of orientation quaternion to set z z member of orientation quaternion to set Scale Scale to set. Needle mesh url Name of Ogre mesh file. physical mesh url Name of .obj file that contains the physical shape of the object. shape Name of shape type. Position x x coordinate of position to set y y coordinate of position to set z z coordinate of position to set Orientation w w member of orientation quaternion to set x x member of orientation quaternion to set y y member of orientation quaternion to set z z member of orientation quaternion to set Scale Scale to set. Rotation axis x x member of rotation axis y y member of rotation axis z z member of rotation axis Texture Width(pixel) Width of the dial texture. Height(pixel) Height of the dial texture. Units Units to be displayed on dial texture. Major ticks Value where major tick should be displayed. Multiple can be set with , separator. Plate color Color of plate that can be set with hexcolor code. Highlights(from, to,color) Highlights to be displayed. Name Name of the node in the editor.","title":"Local configuration"},{"location":"adv/gauge/#input","text":"Input value is dispayed by needle.","title":"Input"},{"location":"adv/gauge/#output","text":"No output.","title":"Output"},{"location":"adv/get-node-property/","text":"get node property Usage Gets the specified node's position, orientation or scale. Configuration NodeID ID of MaxWhere node where orientation should be set. Property Specifies the propert type to get. Possible values are position , orientation and scale . Display name Name of the node in the editor. Input Input triggers the node. Output Specified property is added to msg.payload .","title":"get node property"},{"location":"adv/get-node-property/#get-node-property","text":"","title":"get node property"},{"location":"adv/get-node-property/#usage","text":"Gets the specified node's position, orientation or scale.","title":"Usage"},{"location":"adv/get-node-property/#configuration","text":"NodeID ID of MaxWhere node where orientation should be set. Property Specifies the propert type to get. Possible values are position , orientation and scale . Display name Name of the node in the editor.","title":"Configuration"},{"location":"adv/get-node-property/#input","text":"Input triggers the node.","title":"Input"},{"location":"adv/get-node-property/#output","text":"Specified property is added to msg.payload .","title":"Output"},{"location":"adv/load-otf-asset/","text":"load OTF asset Usage Loads an OTF asset. Configuration OTF Asset Name of the OTF asset. Display name Name of the node in the editor. Input No input allowed. Output After OTF asset is downloaded a message is sent on the output.","title":"load otf asset"},{"location":"adv/load-otf-asset/#load-otf-asset","text":"","title":"load OTF asset"},{"location":"adv/load-otf-asset/#usage","text":"Loads an OTF asset.","title":"Usage"},{"location":"adv/load-otf-asset/#configuration","text":"OTF Asset Name of the OTF asset. Display name Name of the node in the editor.","title":"Configuration"},{"location":"adv/load-otf-asset/#input","text":"No input allowed.","title":"Input"},{"location":"adv/load-otf-asset/#output","text":"After OTF asset is downloaded a message is sent on the output.","title":"Output"},{"location":"adv/mesh-animator/","text":"mesh animator Usage Starts or stops given animator on mesh Configuration Mesh ID ID of MaxWhere mesh where animator should be used. Animator Names of available animators on mesh. Display name Name of the node in the editor. Input If msg.payload is truthy value then, set aimator is started. If msg.payload is falsy value then, set animator is stopped. Output After animator is set a message is sent on the output.","title":"mesh animator"},{"location":"adv/mesh-animator/#mesh-animator","text":"","title":"mesh animator"},{"location":"adv/mesh-animator/#usage","text":"Starts or stops given animator on mesh","title":"Usage"},{"location":"adv/mesh-animator/#configuration","text":"Mesh ID ID of MaxWhere mesh where animator should be used. Animator Names of available animators on mesh. Display name Name of the node in the editor.","title":"Configuration"},{"location":"adv/mesh-animator/#input","text":"If msg.payload is truthy value then, set aimator is started. If msg.payload is falsy value then, set animator is stopped.","title":"Input"},{"location":"adv/mesh-animator/#output","text":"After animator is set a message is sent on the output.","title":"Output"},{"location":"adv/node-event-subscribe/","text":"node event subscribe Usage Registers an event listener. Handler function will be called every time when the specified event is fired on the maxwhere node. Configuration NodeID ID of MaxWhere node where event handler should be set. Event Name Event name to handle. Name Name of the node in the editor. Input No input. Output Event Object added to msg.payload containing different properties according to the event type.","title":"node event subscribe"},{"location":"adv/node-event-subscribe/#node-event-subscribe","text":"","title":"node event subscribe"},{"location":"adv/node-event-subscribe/#usage","text":"Registers an event listener. Handler function will be called every time when the specified event is fired on the maxwhere node.","title":"Usage"},{"location":"adv/node-event-subscribe/#configuration","text":"NodeID ID of MaxWhere node where event handler should be set. Event Name Event name to handle. Name Name of the node in the editor.","title":"Configuration"},{"location":"adv/node-event-subscribe/#input","text":"No input.","title":"Input"},{"location":"adv/node-event-subscribe/#output","text":"Event Object added to msg.payload containing different properties according to the event type.","title":"Output"},{"location":"adv/offset/","text":"offset Usage Offsets a vector by the specified values. Can be used to offset a position or scale vector. Configuration Offset vector Value of offset vector which is added to the input. Input msg.payload is used as a vector. Example: {x:10,y:10,z:0} Output A vector which holds the value of the input vector offsetted by the offset vector which sent in the msg.payload property.","title":"offset"},{"location":"adv/offset/#offset","text":"","title":"offset"},{"location":"adv/offset/#usage","text":"Offsets a vector by the specified values. Can be used to offset a position or scale vector.","title":"Usage"},{"location":"adv/offset/#configuration","text":"Offset vector Value of offset vector which is added to the input.","title":"Configuration"},{"location":"adv/offset/#input","text":"msg.payload is used as a vector. Example: {x:10,y:10,z:0}","title":"Input"},{"location":"adv/offset/#output","text":"A vector which holds the value of the input vector offsetted by the offset vector which sent in the msg.payload property.","title":"Output"},{"location":"adv/rotate/","text":"rotate Usage Rotates the input quaternion with the specified values. Configuration Orientation type Type of orientation. quaternion Offset rotation is set as quaternion x y z w values of quaternion angle-axis Offset rotation is set as angle axis x y z axis of rotation angle angle of rotation in degrees Input msg.payload is used as a quaterion. Example: {x:0.707,y:0,z:0, w: 0.707} Output A quaterion which holds the value of the input quaterion rotated by the offset quaternion which sent in the msg.payload property.","title":"rotate"},{"location":"adv/rotate/#rotate","text":"","title":"rotate"},{"location":"adv/rotate/#usage","text":"Rotates the input quaternion with the specified values.","title":"Usage"},{"location":"adv/rotate/#configuration","text":"Orientation type Type of orientation. quaternion Offset rotation is set as quaternion x y z w values of quaternion angle-axis Offset rotation is set as angle axis x y z axis of rotation angle angle of rotation in degrees","title":"Configuration"},{"location":"adv/rotate/#input","text":"msg.payload is used as a quaterion. Example: {x:0.707,y:0,z:0, w: 0.707}","title":"Input"},{"location":"adv/rotate/#output","text":"A quaterion which holds the value of the input quaterion rotated by the offset quaternion which sent in the msg.payload property.","title":"Output"},{"location":"adv/set-material/","text":"set material Usage Sets the material of the selected mesh. Configuration Mesh ID ID of MaxWhere mesh where material should be set. Subvisual Index of subvisual to set material. Material Material to set. Display name Name of the node in the editor. Input input triggers the node, but msg content is not used. Output After material is set an object is sent containing the selected node in the msg.payload property","title":"set material"},{"location":"adv/set-material/#set-material","text":"","title":"set material"},{"location":"adv/set-material/#usage","text":"Sets the material of the selected mesh.","title":"Usage"},{"location":"adv/set-material/#configuration","text":"Mesh ID ID of MaxWhere mesh where material should be set. Subvisual Index of subvisual to set material. Material Material to set. Display name Name of the node in the editor.","title":"Configuration"},{"location":"adv/set-material/#input","text":"input triggers the node, but msg content is not used.","title":"Input"},{"location":"adv/set-material/#output","text":"After material is set an object is sent containing the selected node in the msg.payload property","title":"Output"},{"location":"adv/set-orientation/","text":"set orientation Usage Sets the orientation of the Node, where orientation in defined in the given space and applied in the given reference. Configuration NodeID ID of MaxWhere node where orientation should be set. Data source Whether Orientation is Set here or coming from Input If set to Set here orientation can be set on the editor Orientation type can be either quaternion or angle-axis quaternion {x, y, z, w} orienation to set as quaternion angle-axis {angle, axis}, where angle is Number and axis is {x, y, z} Refernece Reference of the adjustment. Space Space the adjustment is applied in. Display name Name of the node in the editor. Input if Data source is set to Set here then input triggers the node, but msg content is not used. If Data source is set to input then msg.payload is used as Orientation Orientation to set as {w, x, y, z} or {angle, axis}, where angle is Number and axis can be either {x, y, z} Example for valid input: {\"x\":1,\"y\":0,\"z\":0,\"w\":1} or {\"axis\":{\"x\":1,\"y\":0,\"z\":0},\"angle\":10} Output After orientation is set a message is added to msg.payload .","title":"set orientation"},{"location":"adv/set-orientation/#set-orientation","text":"","title":"set orientation"},{"location":"adv/set-orientation/#usage","text":"Sets the orientation of the Node, where orientation in defined in the given space and applied in the given reference.","title":"Usage"},{"location":"adv/set-orientation/#configuration","text":"NodeID ID of MaxWhere node where orientation should be set. Data source Whether Orientation is Set here or coming from Input If set to Set here orientation can be set on the editor Orientation type can be either quaternion or angle-axis quaternion {x, y, z, w} orienation to set as quaternion angle-axis {angle, axis}, where angle is Number and axis is {x, y, z} Refernece Reference of the adjustment. Space Space the adjustment is applied in. Display name Name of the node in the editor.","title":"Configuration"},{"location":"adv/set-orientation/#input","text":"if Data source is set to Set here then input triggers the node, but msg content is not used. If Data source is set to input then msg.payload is used as Orientation Orientation to set as {w, x, y, z} or {angle, axis}, where angle is Number and axis can be either {x, y, z} Example for valid input: {\"x\":1,\"y\":0,\"z\":0,\"w\":1} or {\"axis\":{\"x\":1,\"y\":0,\"z\":0},\"angle\":10}","title":"Input"},{"location":"adv/set-orientation/#output","text":"After orientation is set a message is added to msg.payload .","title":"Output"},{"location":"adv/set-position/","text":"set position Usage Sets the position of the Node, where position in defined in the given space and applied in the given reference. Configuration NodeID ID of MaxWhere node where position should be set. Data source Whether Position is Set here or coming from Input If set to Set here position can be set on the editor position The Node's position to set in the 3d scene. Reference Reference of the adjustment. Space Space the adjustment is applied in. Display name Name of the node in the editor. Input if Data source is set to Set here then input triggers the node, but msg content is not used. If Data source is set to input then msg.payload is used as Position Example for valid input: {\"x\":10, y:\"20\" z:\"20\"} Output After position is set a message is sent on the output.","title":"set position"},{"location":"adv/set-position/#set-position","text":"","title":"set position"},{"location":"adv/set-position/#usage","text":"Sets the position of the Node, where position in defined in the given space and applied in the given reference.","title":"Usage"},{"location":"adv/set-position/#configuration","text":"NodeID ID of MaxWhere node where position should be set. Data source Whether Position is Set here or coming from Input If set to Set here position can be set on the editor position The Node's position to set in the 3d scene. Reference Reference of the adjustment. Space Space the adjustment is applied in. Display name Name of the node in the editor.","title":"Configuration"},{"location":"adv/set-position/#input","text":"if Data source is set to Set here then input triggers the node, but msg content is not used. If Data source is set to input then msg.payload is used as Position Example for valid input: {\"x\":10, y:\"20\" z:\"20\"}","title":"Input"},{"location":"adv/set-position/#output","text":"After position is set a message is sent on the output.","title":"Output"},{"location":"adv/set-scale/","text":"set scale Usage Sets the scale of Node along every dimension. Scale values are defined in the given space in the given reference. Configuration NodeID ID of MaxWhere node where scale should be set. Data source Whether scale is Set here or coming from Input If set to Set here scale can be set on the editor scale The Node's scale to set in the 3d scene. Reference Reference of the adjustment. Space Space the adjustment is applied in. Display name Name of the node in the editor. Input if Data source is set in the node form than input triggers the node, but msg content is not used. If Data source is coming from an input than msg.payload is used as Scale Example for valid input: {\"x\":1.1, y:\"1.1\" z:\"1.1\"} Output After scale is set a message is added to msg.payload","title":"set scale"},{"location":"adv/set-scale/#set-scale","text":"","title":"set scale"},{"location":"adv/set-scale/#usage","text":"Sets the scale of Node along every dimension. Scale values are defined in the given space in the given reference.","title":"Usage"},{"location":"adv/set-scale/#configuration","text":"NodeID ID of MaxWhere node where scale should be set. Data source Whether scale is Set here or coming from Input If set to Set here scale can be set on the editor scale The Node's scale to set in the 3d scene. Reference Reference of the adjustment. Space Space the adjustment is applied in. Display name Name of the node in the editor.","title":"Configuration"},{"location":"adv/set-scale/#input","text":"if Data source is set in the node form than input triggers the node, but msg content is not used. If Data source is coming from an input than msg.payload is used as Scale Example for valid input: {\"x\":1.1, y:\"1.1\" z:\"1.1\"}","title":"Input"},{"location":"adv/set-scale/#output","text":"After scale is set a message is added to msg.payload","title":"Output"},{"location":"adv/set-shader/","text":"set shader Usage Sets the value of the specified PBS shader parameter. Configuration NodeID ID of MaxWhere node where shader should be set. Shader Name of the shader. Data source Whether shader value is Set here or coming from Input If set to Set here shader value can be set on the editor value Shader parameter value to set. Refernece Reference of the adjustment. Display name Name of the node in the editor. Input if Data source is set to Set here then input triggers the node, but msg content is not used. If Data source is set to input then msg.payload is used as Value Example for valid input: 0.5 Output After shader is set a message is added to msg.payload","title":"set shader"},{"location":"adv/set-shader/#set-shader","text":"","title":"set shader"},{"location":"adv/set-shader/#usage","text":"Sets the value of the specified PBS shader parameter.","title":"Usage"},{"location":"adv/set-shader/#configuration","text":"NodeID ID of MaxWhere node where shader should be set. Shader Name of the shader. Data source Whether shader value is Set here or coming from Input If set to Set here shader value can be set on the editor value Shader parameter value to set. Refernece Reference of the adjustment. Display name Name of the node in the editor.","title":"Configuration"},{"location":"adv/set-shader/#input","text":"if Data source is set to Set here then input triggers the node, but msg content is not used. If Data source is set to input then msg.payload is used as Value Example for valid input: 0.5","title":"Input"},{"location":"adv/set-shader/#output","text":"After shader is set a message is added to msg.payload","title":"Output"},{"location":"adv/set-skybox/","text":"set skybox Usage Sets the skybox material of the Where. Configuration Set on Sets whether the skbox is set on initialization or input Initialization The skybox is set when the Where starts. Input :The skybox is set on input. Material Material to set as skybox. Distance Distance of skybox Display name Name of the node in the editor. Input if Set on is set to Input then input triggers the node, but msg content is not used. Output After skybox is set a message is added to msg.payload","title":"set skybox"},{"location":"adv/set-skybox/#set-skybox","text":"","title":"set skybox"},{"location":"adv/set-skybox/#usage","text":"Sets the skybox material of the Where.","title":"Usage"},{"location":"adv/set-skybox/#configuration","text":"Set on Sets whether the skbox is set on initialization or input Initialization The skybox is set when the Where starts. Input :The skybox is set on input. Material Material to set as skybox. Distance Distance of skybox Display name Name of the node in the editor.","title":"Configuration"},{"location":"adv/set-skybox/#input","text":"if Set on is set to Input then input triggers the node, but msg content is not used.","title":"Input"},{"location":"adv/set-skybox/#output","text":"After skybox is set a message is added to msg.payload","title":"Output"},{"location":"adv/tank/","text":"mw tank Usage Creates a tank which can be used to display values by changing surface color. The tank contains liquid which can be used to display the fullness of the tank by setting the level. Types of tanks Vertical tank The vertical tank is built from two elements. The tank itself and it contains a cylinder which represents the liquid. Configuration Configuration from file File Name Name of the configuration file. Name Name of the node in the editor. Local configuration NodeID ID of MaxWhere node to be set. Mapping Minimum liquid value Minimum value which can by displayed by the liquid. Maximum liquid value Maximum value which can by displayed by the liquid. Minimum value for color indicator Minimum value which can by displayed by the surface color. Maximum value for color indicator Maximum value which can by displayed by the surface color. Transparent material Transparent material for the tank to make liquid visible. Tank mesh url Name of Ogre mesh file. physical mesh url Name of .obj file that contains the physical shape of the object. shape Name of shape type. Position x x coordinate of position to set y y coordinate of position to set z z coordinate of position to set Orientation w w member of orientation quaternion to set x x member of orientation quaternion to set y y member of orientation quaternion to set z z member of orientation quaternion to set Scale Scale to set. Liquid mesh url Name of Ogre mesh file. physical mesh url Name of .obj file that contains the physical shape of the object. shape Name of shape type. Position x x coordinate of position to set y y coordinate of position to set z z coordinate of position to set Orientation w w member of orientation quaternion to set x x member of orientation quaternion to set y y member of orientation quaternion to set z z member of orientation quaternion to set Scale x scale along x coordinate to set y scale along y coordinate to set z scale along z coordinate to set Max Scale x maximum scale along x coordinate which fits inside tank y maximum scale along y coordinate which fits inside tank z maximum scale along z coordinate which fits inside tank Name Name of the node in the editor. Horizontal tank The horizontal tank is built from two elements. The tank itself and it contains resolution number of building blocks which are representing the liquid. Configuration Configuration from file File Name Name of the configuration file. Name Name of the node in the editor. Local configuration NodeID ID of MaxWhere node to be set. Mapping Minimum liquid value Minimum value which can by displayed by the liquid. Maximum liquid value Maximum value which can by displayed by the liquid. Minimum value for color indicator Minimum value which can by displayed by the surface color. Maximum value for color indicator Maximum value which can by displayed by the surface color. Transparent material Transparent material for the tank to make liquid visible. Tank mesh url Name of Ogre mesh file. physical mesh url Name of .obj file that contains the physical shape of the object. shape Name of shape type. Position x x coordinate of position to set y y coordinate of position to set z z coordinate of position to set Orientation w w member of orientation quaternion to set x x member of orientation quaternion to set y y member of orientation quaternion to set z z member of orientation quaternion to set Scale Scale to set. Length Length of tank. Radius Radius of tank. Liquid mesh url Name of Ogre mesh file. resolution Number of liquid building blocks edge length Edge lenfth of building block. Name Name of the node in the editor. Input The input value can set the following features. - If msg.topic is setColor than the value is setting the surface color of the tank. - If msg.topic is setLevel than the value is setting the level of the liquid. - If msg.topic is toggleTransparency than the material is toggling between the trasparent material and the original. Output No output.","title":"tank"},{"location":"adv/tank/#mw-tank","text":"","title":"mw tank"},{"location":"adv/tank/#usage","text":"Creates a tank which can be used to display values by changing surface color. The tank contains liquid which can be used to display the fullness of the tank by setting the level.","title":"Usage"},{"location":"adv/tank/#types-of-tanks","text":"","title":"Types of tanks"},{"location":"adv/tank/#vertical-tank","text":"The vertical tank is built from two elements. The tank itself and it contains a cylinder which represents the liquid.","title":"Vertical tank"},{"location":"adv/tank/#configuration","text":"","title":"Configuration"},{"location":"adv/tank/#configuration-from-file","text":"File Name Name of the configuration file. Name Name of the node in the editor.","title":"Configuration from file"},{"location":"adv/tank/#local-configuration","text":"NodeID ID of MaxWhere node to be set. Mapping Minimum liquid value Minimum value which can by displayed by the liquid. Maximum liquid value Maximum value which can by displayed by the liquid. Minimum value for color indicator Minimum value which can by displayed by the surface color. Maximum value for color indicator Maximum value which can by displayed by the surface color. Transparent material Transparent material for the tank to make liquid visible. Tank mesh url Name of Ogre mesh file. physical mesh url Name of .obj file that contains the physical shape of the object. shape Name of shape type. Position x x coordinate of position to set y y coordinate of position to set z z coordinate of position to set Orientation w w member of orientation quaternion to set x x member of orientation quaternion to set y y member of orientation quaternion to set z z member of orientation quaternion to set Scale Scale to set. Liquid mesh url Name of Ogre mesh file. physical mesh url Name of .obj file that contains the physical shape of the object. shape Name of shape type. Position x x coordinate of position to set y y coordinate of position to set z z coordinate of position to set Orientation w w member of orientation quaternion to set x x member of orientation quaternion to set y y member of orientation quaternion to set z z member of orientation quaternion to set Scale x scale along x coordinate to set y scale along y coordinate to set z scale along z coordinate to set Max Scale x maximum scale along x coordinate which fits inside tank y maximum scale along y coordinate which fits inside tank z maximum scale along z coordinate which fits inside tank Name Name of the node in the editor.","title":"Local configuration"},{"location":"adv/tank/#horizontal-tank","text":"The horizontal tank is built from two elements. The tank itself and it contains resolution number of building blocks which are representing the liquid.","title":"Horizontal tank"},{"location":"adv/tank/#configuration_1","text":"","title":"Configuration"},{"location":"adv/tank/#configuration-from-file_1","text":"File Name Name of the configuration file. Name Name of the node in the editor.","title":"Configuration from file"},{"location":"adv/tank/#local-configuration_1","text":"NodeID ID of MaxWhere node to be set. Mapping Minimum liquid value Minimum value which can by displayed by the liquid. Maximum liquid value Maximum value which can by displayed by the liquid. Minimum value for color indicator Minimum value which can by displayed by the surface color. Maximum value for color indicator Maximum value which can by displayed by the surface color. Transparent material Transparent material for the tank to make liquid visible. Tank mesh url Name of Ogre mesh file. physical mesh url Name of .obj file that contains the physical shape of the object. shape Name of shape type. Position x x coordinate of position to set y y coordinate of position to set z z coordinate of position to set Orientation w w member of orientation quaternion to set x x member of orientation quaternion to set y y member of orientation quaternion to set z z member of orientation quaternion to set Scale Scale to set. Length Length of tank. Radius Radius of tank. Liquid mesh url Name of Ogre mesh file. resolution Number of liquid building blocks edge length Edge lenfth of building block. Name Name of the node in the editor.","title":"Local configuration"},{"location":"adv/tank/#input","text":"The input value can set the following features. - If msg.topic is setColor than the value is setting the surface color of the tank. - If msg.topic is setLevel than the value is setting the level of the liquid. - If msg.topic is toggleTransparency than the material is toggling between the trasparent material and the original.","title":"Input"},{"location":"adv/tank/#output","text":"No output.","title":"Output"},{"location":"adv/wom-event-subscribe/","text":"wom event subscribe Usage Registers an event listener. Handler function will be called every time when the specified event is fired in maxwhere engine or wom. Configuration Event Name Event name to handle. subject ID of event's subject to register. Listener will be called only if event's subject matches this id. Name Name of the node in the editor. Input No input allowed. Output Event Object added to msg.payload containing different properties according to the event type.","title":"wom event subscribe"},{"location":"adv/wom-event-subscribe/#wom-event-subscribe","text":"","title":"wom event subscribe"},{"location":"adv/wom-event-subscribe/#usage","text":"Registers an event listener. Handler function will be called every time when the specified event is fired in maxwhere engine or wom.","title":"Usage"},{"location":"adv/wom-event-subscribe/#configuration","text":"Event Name Event name to handle. subject ID of event's subject to register. Listener will be called only if event's subject matches this id. Name Name of the node in the editor.","title":"Configuration"},{"location":"adv/wom-event-subscribe/#input","text":"No input allowed.","title":"Input"},{"location":"adv/wom-event-subscribe/#output","text":"Event Object added to msg.payload containing different properties according to the event type.","title":"Output"},{"location":"release-notes/release-notes-1-1-0/","text":"RELEASE NOTES v1.1.0 Functional enhancements Setter nodes are now capable to use input data as source. Setter nodes are now chainable. Camera is included to select on set-position and set-orientation node. Setter nodes are using jsonform. Excluded permanent nodes from the node ID dropdown. New deployed Node ID-s are selectable without reloading the node-red editor","title":"RELEASE NOTES v1.1.0"},{"location":"release-notes/release-notes-1-1-0/#release-notes-v110","text":"","title":"RELEASE NOTES v1.1.0"},{"location":"release-notes/release-notes-1-1-0/#functional-enhancements","text":"Setter nodes are now capable to use input data as source. Setter nodes are now chainable. Camera is included to select on set-position and set-orientation node. Setter nodes are using jsonform. Excluded permanent nodes from the node ID dropdown. New deployed Node ID-s are selectable without reloading the node-red editor","title":"Functional enhancements"},{"location":"release-notes/release-notes-2-0-0/","text":"RELEASE NOTES v2.0.0 Functional enhancements gauge dial texture generator is using the electron browserwindow added load otf asset node set-orientation is accepting axis-angle and quaternion new Node ID-s are selectable without reloading the editor page camera is selectable on set-orientation and set-position node add-mesh node can create mesh on input","title":"RELEASE NOTES v2.0.0"},{"location":"release-notes/release-notes-2-0-0/#release-notes-v200","text":"","title":"RELEASE NOTES v2.0.0"},{"location":"release-notes/release-notes-2-0-0/#functional-enhancements","text":"gauge dial texture generator is using the electron browserwindow added load otf asset node set-orientation is accepting axis-angle and quaternion new Node ID-s are selectable without reloading the editor page camera is selectable on set-orientation and set-position node add-mesh node can create mesh on input","title":"Functional enhancements"},{"location":"release-notes/release-notes-2-1-0/","text":"RELEASE NOTES v2.1.0 Functional enhancements add-light, add-mesh-herarchy, add-webtable, add-overlay node can create mesh on input added get-node-property to get a specified node position, orentation or scale wom-event-subsctibe supports subject property orientation quaternion is normailized on every form Bug fixes fixed issue with gizmo becoming irresponsive on restart overlay is removing it's listeners on close fixed stuck mesh problem on save","title":"RELEASE NOTES v2.1.0"},{"location":"release-notes/release-notes-2-1-0/#release-notes-v210","text":"","title":"RELEASE NOTES v2.1.0"},{"location":"release-notes/release-notes-2-1-0/#functional-enhancements","text":"add-light, add-mesh-herarchy, add-webtable, add-overlay node can create mesh on input added get-node-property to get a specified node position, orentation or scale wom-event-subsctibe supports subject property orientation quaternion is normailized on every form","title":"Functional enhancements"},{"location":"release-notes/release-notes-2-1-0/#bug-fixes","text":"fixed issue with gizmo becoming irresponsive on restart overlay is removing it's listeners on close fixed stuck mesh problem on save","title":"Bug fixes"},{"location":"release-notes/release-notes-2-2-0/","text":"RELEASE NOTES v2.2.0 new mesh-animator node add-mesh and add-mesh hierarchy can add physical shape form file mw tank, mw gauge is using jsonform removed unnecesarry files and node modules to reduce package size","title":"RELEASE NOTES v2.2.0"},{"location":"release-notes/release-notes-2-2-0/#release-notes-v220","text":"new mesh-animator node add-mesh and add-mesh hierarchy can add physical shape form file mw tank, mw gauge is using jsonform removed unnecesarry files and node modules to reduce package size","title":"RELEASE NOTES v2.2.0"},{"location":"release-notes/release-notes-2-3-0/","text":"RELEASE NOTES v2.3.0 added set-skybox, rotate, offset nodes options can be set on instancing","title":"RELEASE NOTES v2.3.0"},{"location":"release-notes/release-notes-2-3-0/#release-notes-v230","text":"added set-skybox, rotate, offset nodes options can be set on instancing","title":"RELEASE NOTES v2.3.0"},{"location":"release-notes/release-notes-3-0-0/","text":"RELEASE NOTES v3.0.0 added animate, set-material nodes possibility to add dynamic meshes are available again and now it does not crash on clear fixed material lists to exclude skybox materials fixed skybox lists to only inlucde skybox materials node-red updated to v2.0.6 updated docs","title":"RELEASE NOTES v3.0.0"},{"location":"release-notes/release-notes-3-0-0/#release-notes-v300","text":"added animate, set-material nodes possibility to add dynamic meshes are available again and now it does not crash on clear fixed material lists to exclude skybox materials fixed skybox lists to only inlucde skybox materials node-red updated to v2.0.6 updated docs","title":"RELEASE NOTES v3.0.0"}]}